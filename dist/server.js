//__HEAD__
var le=Object.create,C=Object.defineProperty,ue=Object.getPrototypeOf,he=Object.prototype.hasOwnProperty,fe=Object.getOwnPropertyNames,ce=Object.getOwnPropertyDescriptor;var pe=s=>C(s,"__esModule",{value:!0});var de=(s,e,t)=>{if(e&&typeof e=="object"||typeof e=="function")for(let r of fe(e))!he.call(s,r)&&r!=="default"&&C(s,r,{get:()=>e[r],enumerable:!(t=ce(e,r))||t.enumerable});return s},u=s=>de(pe(C(s!=null?le(ue(s)):{},"default",s&&s.__esModule&&"default"in s?{get:()=>s.default,enumerable:!0}:{value:s,enumerable:!0})),s);var me=u(require("events")),ge=u(require("fs")),be=u(require("path"));var je=Symbol.for("#refresh"),we=Symbol.for("#manifest"),Ae=Symbol.for("#absPath"),Fe=Symbol.for("#raw"),Oe=Symbol.for("#watch");var I=class{static for(e){return new Proxy({},new this(e))}constructor(e){this.getter=e}get target(){return this.getter()}get(e,t){return this.target[t]}set(e,t,r){return this.target[t]=r,!0}},l=I.for(function(){return globalThis[we]});var R=u(require("cluster")),g=u(require("fs")),S=u(require("path")),W=u(require("events"));var P=u(require("perf_hooks")),w=Symbol.for("#spinner"),ve=Symbol.for("#ctime"),k=Symbol.for("#IMBA_OPTIONS"),ye={reset:[0,0],bold:[1,22],dim:[2,22],italic:[3,23],underline:[4,24],inverse:[7,27],hidden:[8,28],strikethrough:[9,29],black:[30,39],red:[31,39],green:[32,39],yellow:[33,39],blue:[34,39],magenta:[35,39],cyan:[36,39],white:[37,39],gray:[90,39],redBright:[91,39],greenBright:[92,39],yellowBright:[93,39],blueBright:[94,39],magentaBright:[95,39],cyanBright:[96,39],whiteBright:[97,39]},c={bold:function(s){return"[1m"+s+"[22m"},red:function(s){return"[31m"+s+"[39m"},green:function(s){return"[32m"+s+"[39m"},yellow:function(s){return"[33m"+s+"[39m"},blue:function(s){return"[94m"+s+"[39m"},gray:function(s){return"[90m"+s+"[39m"},white:function(s){return"[37m"+s+"[39m"},f:function(s,e){let t=ye[s];return"["+t[0]+"m"+e+"["+t[1]+"m"}};c.warn=c.yellow;c.error=c.red;var x=process.platform!=="win32"||process.env.CI||process.env.TERM==="xterm-256color",xe={info:c.f("yellowBright",x?"\u2139":"i"),success:c.green(x?"\u2714":"\u221A"),warning:c.yellow(x?"\u26A0":"!!"),error:c.red(x?"\xD7":"\u2716"),debug:c.blue(x?"\u2139":"i")},E=["debug","info","success","warning","error","silent"],Se={"-1":"socket","4":"ip4","6":"ip6"};function _e(s){let e=c.f;return s=s.replace(/https?\:[^\s\n\)\]]+/g,function(t){return e("blueBright",t)}),s=s.replace(/^[\t\s]*\>[^\n]+/gm,function(t){return e("bold",t)}),s=s.replace(/\t/g,"  "),s=s.replace(/^/gm,"  "),s}function L(s,...e){let t=c.f;return s=s.replace(/\%([\w\.]+)/g,function(r,n){let i=e.shift();if(n=="markdown")return _e(i);if(n=="kb")return t("dim",(i/1e3).toFixed(1)+"kb");if(n=="path"||n=="bold")return t("bold",i);if(n=="dim")return t("dim",i);if(n=="address"){let a=Se[i.addressType];return i.port?t("blueBright",[i.address||"http://127.0.0.1",i.port].join(":")):t("blueBright",a)}else{if(n=="ms")return t("yellow",Math.round(i)+"ms");if(n=="d")return t("blueBright",i);if(n=="red")return t("redBright",i);if(n=="green")return t("greenBright",i);if(n=="yellow")return t("yellowBright",i);if(n=="ref")return t("yellowBright","#"+(i.id||i));if(n=="elapsed"){i!=null&&e.unshift(i);let a=P.performance.now();return t("yellow",Math.round(a)+"ms")}else if(n=="heap"){i!=null&&e.unshift(i);let a=process.memoryUsage().heapUsed/1024/1024;return t("yellow",a.toFixed(2)+"mb")}else return i}}),[s,...e]}var D=null,N=null,z=class{static get main(){return N||(N=new this)}constructor({prefix:e=null,loglevel:t}={}){this[ve]=Date.now(),this.prefix=e?L(...e)[0]:"",this.loglevel=t||process.env.IMBA_LOGLEVEL||globalThis[k]&&globalThis[k].loglevel||"info"}write(e,...t){if(E.indexOf(e)<E.indexOf(this.loglevel))return this;let r=xe[e]||e,[n,...i]=L(...t);return this.prefix&&(n=this.prefix+n),this[w]&&this[w].isSpinning?(e=="success"&&(this[w].clear(),console.log(r+" "+n,...i),this[w].frame()),this[w].text=n):console.log(r+" "+n,...i)}debug(...e){return this.write("debug",...e)}log(...e){return this.write("info",...e)}info(...e){return this.write("info",...e)}warn(...e){return this.write("warn",...e)}error(...e){return this.write("error",...e)}success(...e){return this.write("success",...e)}ts(...e){return this.write("debug",...e,P.performance.now())}spinner(){}get[w](){return D}get proxy(){var e=this;let t=function(...r){return e.info(...r)};return t.info=e.info.bind(e),t.warn=e.warn.bind(e),t.error=e.error.bind(e),t.debug=e.debug.bind(e),t.success=e.success.bind(e),t.ts=e.ts.bind(e),t.logger=e,t}async time(e,t){let r=Date.now();if(t){let n=await t();return this.info(""+e+" %ms",Date.now()-r),n}}},U=new z().proxy;var Te=u(require("module")),V=u(require("http")),De=u(require("https")),G=u(require("http2"));function h(s){let e;return s?(e=s.toIterable)?e.call(s):s:[]}var J=Symbol.for("#setup"),K=Symbol.for("#setup?"),Q=Symbol.for("#watch"),Be=Symbol.for("#dom"),Ce=Symbol.for("#server"),Pe=Symbol.for("#raw"),M={html:{"Content-Type":"text/html"},js:{"Content-Type":"text/javascript"},mjs:{"Content-Type":"text/javascript"},json:{"Content-Type":"application/json"},css:{"Content-Type":"text/css"},otf:{"Content-Type":"font/otf"},ttf:{"Content-Type":"font/ttf"},woff:{"Content-Type":"font/woff"},woff2:{"Content-Type":"font/woff2"},svg:{"Content-Type":"image/svg+xml"},avif:{"Content-Type":"image/avif"},gif:{"Content-Type":"image/gif"},png:{"Content-Type":"image/png"},apng:{"Content-Type":"image/apng"},webp:{"Content-Type":"image/webp"},jpg:{"Content-Type":"image/jpeg"},jpeg:{"Content-Type":"image/jpeg"}},m=globalThis.process,X=class extends Set{call(e,...t){var r;r=[];for(let n of h(this))r.push(n[e](...t));return r}close(e={}){var t;t=[];for(let r of h(this))t.push(r.close(e));return t}reload(e={}){var t;t=[];for(let r of h(this))t.push(r.reload(e));return t}broadcast(e,...t){var r;r=[];for(let n of h(this))r.push(n.broadcast(e,...t));return r}emit(e,t){var r;r=[];for(let n of h(this))r.push(n.emit(e,t));return r}},v=new X,Y=new class extends W.EventEmitter{constructor(){var e;super(...arguments);e=this,this.autoreload=!1,this.state={},R.default.isWorker&&m.on("message",function(t){if(e.emit("message",t),t[0]=="emit")return e.emit(...t.slice(1))})}[J](){var e=this;if(!!(this[K]!=!0?(this[K]=!0,!0):!1))return e.on("reloading",function(t){var r;console.log("is reloading - from outside"),e.state.reloading=!0,r=[];for(let n of h(v))r.push(n.pause());return r}),e.on("reloaded",async function(t){var r;e.state.reloaded=!0,console.log("is reloaded - from outside"),r=[];for(let i of h(v))r.push(i.close());let n=r;return await Promise.all(n),m.exit(0)}),e.on("manifest:change",function(t){if(m.env.IMBA_HMR)return l.update(t)}),e.on("manifest:error",function(t){if(m.env.IMBA_HMR)return l.errors=t,v.broadcast("errors",l.errors)}),!0}send(e){if(m.send instanceof Function)return m.send(e)}on(e,t){return e=="change"&&this.watch(),super.on(...arguments)}watch(){var e=this;if(this[Q]!=!0?(this[Q]=!0,!0):!1)return l.on("change:main",function(){return e.emit("change",l)})}reload(){if(!(this.isReloading!=!0?(this.isReloading=!0,!0):!1))return this;if(this.state.reloading=!0,!m.env.IMBA_SERVE){console.warn("not possible to gracefully reload servers not started via imba start");return}this.send("reload")}},Z=class{constructor(e,t={}){this.url=e,[this.path,this.query]=e.split("?"),this.ext=S.default.extname(this.path),this.headers={"Content-Type":"text/plain","Access-Control-Allow-Origin":"*","cache-control":"public"},Object.assign(this.headers,M[this.ext.slice(1)]||{})}respond(e,t){let r=l.urls[this.url],n=this.headers,i=r?l.resolve(r):l.resolveAssetPath("public"+this.path);if(!i)return console.log("found no path for",r,this.url),t.writeHead(404,{}),t.end();if(r&&(r.ttl>0&&(n["cache-control"]="max-age="+r.ttl),r.imports)){let a=[];for(let o=0,p=h(r.imports),b=p.length;o<b;o++){let d=p[o];a.push("<"+d.url+">; rel=modulepreload; as=script")}n.Link=a.join(", ")}return g.default.access(i,g.default.constants.R_OK,function(a){if(a)return console.log("could not find path",i),t.writeHead(404,{}),t.end();try{let o=g.default.createReadStream(i);return t.writeHead(200,n),o.pipe(t)}catch(o){return t.writeHead(503,{}),t.end()}})}createReadStream(){return g.default.createReadStream(this.path)}pipe(e){return this.createReadStream().pipe(e)}},q=class{static wrap(e,t={}){return new this(e,t)}constructor(e,t){var r=this;v.add(this),this.id=Math.random(),this.options=t,this.closed=!1,this.paused=!1,this.server=e,this.clients=new Set,this.stalledResponses=[],this.assetResponders={},m.env.IMBA_PATH&&(this.devtoolsPath=S.default.resolve(m.env.IMBA_PATH,"devtools.imba.js")),this.scheme=e instanceof V.default.Server?"http":"https";let n=this.server._events.request,i=globalThis[Be];e.off("request",n),n[Ce]=this,e.on("listening",function(){let a=r.server.address(),o=a.address;(o=="::"||o=="0.0.0.0")&&(o="localhost");let p=""+r.scheme+"://"+o+":"+a.port+"/";return U.info("listening on %bold",p)}),l.on("change",function(a,o){return r.broadcast("manifest",o.data[Pe])}),r.handler=function(a,o){var p;let b=a instanceof G.Http2ServerRequest,d=a.url,ie="/__assets__/";if(r.paused||r.closed)return o.statusCode=302,o.setHeader("Location",a.url),b||o.setHeader("Connection","close"),r.closed?(b&&a.stream.session.close(),o.end()):r.stalledResponses.push(o);if(d=="/__hmr__.js"&&r.devtoolsPath){let f=g.default.createReadStream(r.devtoolsPath);return o.writeHead(200,M.js),f.pipe(o)}if(d=="/__hmr__"){let f={"Content-Type":"text/event-stream","Cache-Control":"no-cache"};return b||(f.Connection="keep-alive"),o.writeHead(200,f),r.clients.add(o),r.broadcast("init",l.serializeForBrowser(),[o]),a.on("close",function(){return r.clients.delete(o)}),!0}if(d.indexOf(ie)==0||l.urls[d])return((p=r.assetResponders)[d]||(p[d]=new Z(d,r))).respond(a,o);let B=a.headers,_;if(b?_=B[":scheme"]+"://"+B[":authority"]:_=(a.connection.encrypted?"https":"http")+"://"+B.host,t.static){let f=new URL(d,_),oe=S.default.extname(f.pathname),A=M[oe.slice(1)];if(A){let F=S.default.resolve(l.cwd,"."+f.pathname);if(g.default.existsSync(F)){g.default.readFile(F,function(O,ae){return O?(o.writeHead(500,{}),o.write("Error getting the file: "+O)):(o.writeHead(200,A),o.end(ae))});return}}}if(i){let f=new i.Location(a.url,_);return i.Document.create({location:f},function(){return n(a,o)})}else return n(a,o)},e.on("request",r.handler),e.on("close",function(){return console.log("server is closing!!!")}),R.default.isWorker&&(Y[J](),Y.send("serve"))}broadcast(e,t={},r=this.clients){t=JSON.stringify(t);let n="data: "+t+`


`;for(let i of h(r))i.write("event: "+e+`
`),i.write(`id: imba
`),i.write(n);return this}pause(){return(this.paused!=!0?(this.paused=!0,!0):!1)&&this.broadcast("paused"),this}resume(){if(this.paused!=!1?(this.paused=!1,!0):!1)return this.broadcast("resumed"),this.flushStalledResponses()}flushStalledResponses(){for(let e=0,t=h(this.stalledResponses),r=t.length;e<r;e++)t[e].end();return this.stalledResponses=[]}close(){var e=this;return this.pause(),new Promise(function(t){return e.closed=!0,e.server.close(t),e.flushStalledResponses()})}};function $(s,...e){return q.wrap(s,...e)}var ee=Symbol.for("#init"),te=Symbol.for("#warned"),y=Symbol.for("#asset"),T=class{static wrap(e){let t=new T(e);return new Proxy(t,t)}constructor(e){this.meta=e}get input(){return l.inputs[this.meta.input]}get asset(){return globalThis._MF_?this.meta:this.input?this.input.asset:null}set(e,t,r){return!0}get(e,t){return this.meta.meta&&this.meta.meta[t]!=null?this.meta.meta[t]:this.asset?t=="absPath"&&!this.asset.absPath?this.asset.url:this.asset[t]:((this.meta[te]!=!0?(this.meta[te]=!0,!0):!1)&&console.warn("Asset for '"+this.meta.input+"' not found"),t=="valueOf"?function(){return""}:null)}},re=class{constructor(e=null){this[ee](e)}[ee](e=null){this.url=e?e.url:void 0,this.meta=e?e.meta:void 0}adoptNode(e){var t;if((t=this.meta)==null?void 0:t.content){for(let r=this.meta.attributes,n=0,i=Object.keys(r),a=i.length,o,p;n<a;n++)o=i[n],p=r[o],e.setAttribute(o,p);e.innerHTML=this.meta.content}return this}toString(){return this.url}toStyleString(){return"url("+this.url+")"}};function se(s){var e,t;if(s[y])return s[y];if(s.type=="svg")return s[y]||(s[y]=new re(s));if(s.input){let r=globalThis._MF_&&globalThis._MF_[s.input];return r&&(Object.assign(s,r),s.toString=function(){return this.absPath}),s[y]||(s[y]=T.wrap(s))}return s}var H=u(require("express"));var ne=se({input:"entry:app/index.html"});var j=(0,H.default)();j.use(H.default.static("static"));j.get(/.*/,function(s,e){return s.accepts(["image/*","html"])!="html"?e.sendStatus(404):e.send(ne.body)});$(j.listen(process.env.PORT||3e3));
//__FOOT__
//# sourceMappingURL=data:application/json;base64,
